{"version":3,"file":"static/js/784.b9a9b5f1.chunk.js","mappings":"iMAEaA,EAAmBC,EAAAA,GAAAA,QAAH,qKAWhBC,EAAeD,EAAAA,GAAAA,GAAH,qH,UCTZE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACL,EAAD,WACGI,IAAS,SAACF,EAAD,UAAeE,IAExBC,IAGN,C,6JCVYC,EAAmBL,EAAAA,GAAAA,KAAH,mFAMhBM,EAAoBN,EAAAA,GAAAA,MAAH,6CAIjBO,EAAoBP,EAAAA,GAAAA,MAAH,6UAsBjBQ,EAAqBR,EAAAA,GAAAA,OAAH,0X,UCrBlBS,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA0CJ,EAAAA,EAAAA,UAAS,IAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KAkBMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,OACHR,EAAaS,GACb,MAEF,IAAK,QACHP,EAAcO,GACd,MAEF,IAAK,WACHL,EAAiBK,GAMtB,EAED,OACE,SAACrB,EAAA,EAAD,CAASC,MAAM,iBAAf,UACE,UAACE,EAAD,CAAkBmB,aAAa,MAAMC,SAtCpB,SAAAL,GACnBA,EAAEM,iBAEFhB,GACEiB,EAAAA,EAAAA,IAAS,CAAEL,KAAMT,EAAWe,MAAOb,EAAYc,SAAUZ,IAI5D,EA8BG,WACE,SAACX,EAAD,CAAmBwB,QAAQ,YAA3B,uBACA,SAACvB,EAAD,CACEwB,KAAK,OACLT,KAAK,OACLC,MAAOV,EACPmB,GAAG,YACHC,SAAUd,KAGZ,SAACb,EAAD,CAAmBwB,QAAQ,aAA3B,oBACA,SAACvB,EAAD,CACEwB,KAAK,QACLT,KAAK,QACLC,MAAOR,EACPiB,GAAG,aACHC,SAAUd,KAGZ,SAACb,EAAD,CAAmBwB,QAAQ,gBAA3B,uBACA,SAACvB,EAAD,CACEwB,KAAK,WACLT,KAAK,WACLC,MAAON,EACPe,GAAG,gBACHC,SAAUd,KAGZ,SAACX,EAAD,CAAoBuB,KAAK,SAAzB,0BAIP,E,UCtFc,SAASG,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC1B,EAAD,KAEA,SAAC,KAAD,CAAS2B,SAAS,gBAGvB,C","sources":["components/Section/Section.styled.js","components/Section/Section.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionContainer = styled.section`\n  box-sizing: border-box;\n\n  width: 560px;\n  border: 3px solid #111827;\n  border-radius: 8px;\n\n  padding: 32px;\n  margin: 40px auto;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  color: #111827;\n\n  margin: 0px 0px 32px 0px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionContainer, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <SectionTitle>{title}</SectionTitle>}\n\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const RegisterFormList = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const RegisterFormLable = styled.label`\n  font-weight: 600;\n`;\n\nexport const RegisterFormInput = styled.input`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 48px;\n  padding: 8px;\n\n  background-color: #ffffff;\n  border: 3px solid #111827;\n  border-radius: 4px;\n\n  outline: 0px;\n  color: #111827;\n\n  :hover,\n  :focus {\n    border: 3px solid #6366f1;\n  }\n`;\n\nexport const RegisterFormButton = styled.button`\n  box-sizing: border-box;\n  display: block;\n\n  width: 100%;\n  height: 48px;\n  padding: 8px;\n\n  background-color: #111827;\n  border: 3px solid #111827;\n  border-radius: 4px;\n  outline: 0px;\n\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  text-transform: uppercase;\n\n  :hover,\n  :focus {\n    background-color: #6366f1;\n  }\n`;\n","import { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nimport { Section } from 'components/Section/Section';\nimport {\n  RegisterFormList,\n  RegisterFormLable,\n  RegisterFormInput,\n  RegisterFormButton,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [inputName, setInputName] = useState('');\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputPassword, setInputPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      register({ name: inputName, email: inputEmail, password: inputPassword })\n    );\n\n    // resetForm();\n  };\n\n  // const resetForm = () => {\n  //   setInputName('');\n  //   setInputEmail('');\n  //   setInputPassword('');\n  // };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setInputName(value);\n        break;\n\n      case 'email':\n        setInputEmail(value);\n        break;\n\n      case 'password':\n        setInputPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Section title=\"Create account\">\n      <RegisterFormList autoComplete=\"off\" onSubmit={handleSubmit}>\n        <RegisterFormLable htmlFor=\"inputName\">Username</RegisterFormLable>\n        <RegisterFormInput\n          type=\"text\"\n          name=\"name\"\n          value={inputName}\n          id=\"inputName\"\n          onChange={handleChange}\n        />\n\n        <RegisterFormLable htmlFor=\"inputEmail\">Email</RegisterFormLable>\n        <RegisterFormInput\n          type=\"email\"\n          name=\"email\"\n          value={inputEmail}\n          id=\"inputEmail\"\n          onChange={handleChange}\n        />\n\n        <RegisterFormLable htmlFor=\"inputPassword\">Password</RegisterFormLable>\n        <RegisterFormInput\n          type=\"password\"\n          name=\"password\"\n          value={inputPassword}\n          id=\"inputPassword\"\n          onChange={handleChange}\n        />\n\n        <RegisterFormButton type=\"submit\">Register</RegisterFormButton>\n      </RegisterFormList>\n    </Section>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Toaster } from 'react-hot-toast';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n}\n"],"names":["SectionContainer","styled","SectionTitle","Section","title","children","RegisterFormList","RegisterFormLable","RegisterFormInput","RegisterFormButton","RegisterForm","dispatch","useDispatch","useState","inputName","setInputName","inputEmail","setInputEmail","inputPassword","setInputPassword","handleChange","e","target","name","value","autoComplete","onSubmit","preventDefault","register","email","password","htmlFor","type","id","onChange","Register","Helmet","position"],"sourceRoot":""}