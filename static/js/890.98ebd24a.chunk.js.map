{"version":3,"file":"static/js/890.98ebd24a.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.js","redux/phonebook/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionContainer = styled.section`\n  box-sizing: border-box;\n\n  width: 560px;\n  border: 3px solid #111827;\n  border-radius: 8px;\n\n  padding: 32px;\n  margin: 40px auto;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  color: #111827;\n\n  margin: 0px 0px 32px 0px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionContainer, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <SectionTitle>{title}</SectionTitle>}\n\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => state.filters.filter;\n","import styled from 'styled-components';\n\nexport const ContactFormList = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const ContactFormLable = styled.label`\n  font-weight: 600;\n`;\n\nexport const ContactFormInput = styled.input`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 48px;\n  padding: 8px;\n\n  background-color: #ffffff;\n  border: 3px solid #111827;\n  border-radius: 4px;\n\n  outline: 0px;\n  color: #111827;\n\n  :hover,\n  :focus {\n    border: 3px solid #6366f1;\n  }\n`;\n\nexport const ContactFormButton = styled.button`\n  box-sizing: border-box;\n  display: block;\n\n  width: 100%;\n  height: 48px;\n  padding: 8px;\n\n  background-color: #111827;\n  border: 3px solid #111827;\n  border-radius: 4px;\n  outline: 0px;\n\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  text-transform: uppercase;\n\n  :hover,\n  :focus {\n    background-color: #6366f1;\n  }\n`;\n","import { Section } from 'components/Section/Section';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/phonebook/operations';\nimport { selectContacts } from 'redux/phonebook/selectors';\n\nimport {\n  ContactFormList,\n  ContactFormLable,\n  ContactFormInput,\n  ContactFormButton,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const handleNameChange = e => setContactName(e.target.value);\n  const handleNumberChange = e => setContactNumber(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === contactName.toLowerCase()\n      )\n    ) {\n      return alert(`${contactName} is already in contacts.`);\n    }\n    handleAddContact(contactName, contactNumber);\n\n    resetForm();\n  };\n\n  const handleAddContact = (name, number) => {\n    dispatch(addContact({ name, number }));\n  };\n\n  const resetForm = () => {\n    setContactName('');\n    setContactNumber('');\n  };\n\n  return (\n    <Section title=\"Add Contact\">\n      <ContactFormList autoComplete=\"off\" onSubmit={handleSubmit}>\n        <ContactFormLable htmlFor=\"inputName\">Name</ContactFormLable>\n\n        <ContactFormInput\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          id=\"inputName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleNameChange}\n        />\n\n        <ContactFormLable htmlFor=\"inputNumber\">Number</ContactFormLable>\n\n        <ContactFormInput\n          type=\"tel\"\n          name=\"number\"\n          value={contactNumber}\n          id=\"inputNumber\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleNumberChange}\n        />\n\n        <ContactFormButton type=\"submit\">Add contact</ContactFormButton>\n      </ContactFormList>\n    </Section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterFormLable = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  font-weight: 600;\n`;\n\nexport const FilterFormInput = styled.input`\n  box-sizing: border-box;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 48px;\n  padding: 8px;\n\n  background-color: #ffffff;\n  border: 3px solid #111827;\n  border-radius: 4px;\n  outline: 0px;\n\n  color: #111827;\n  :hover,\n  :focus {\n    border: 3px solid #6366f1;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/phonebook/selectors';\nimport { filteredContacts } from 'redux/phonebook/slice';\n\nimport { FilterFormLable, FilterFormInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilteredContacts);\n\n  const onFilterContacts = e => {\n    dispatch(filteredContacts(e.currentTarget.value));\n  };\n\n  return (\n    <FilterFormLable htmlFor=\"filterName\">\n      Find contacts by name\n      <FilterFormInput\n        type=\"text\"\n        id=\"filterName\"\n        value={value}\n        onChange={onFilterContacts}\n      />\n    </FilterFormLable>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  margin-top: 32px;\n`;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  font-weight: 600;\n  color: #111827;\n`;\n\nexport const ContactListButton = styled.button`\n  box-sizing: border-box;\n  display: block;\n\n  padding: 8px 32px;\n  background-color: #111827;\n  border: 3px solid #111827;\n  border-radius: 4px;\n  outline: 0px;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  text-transform: uppercase;\n\n  :hover,\n  :focus {\n    background-color: #6366f1;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/phonebook/selectors';\n\nimport { fetchContacts, deleteContact } from 'redux/phonebook/operations';\n\nimport {\n  List,\n  ContactListItem,\n  ContactListButton,\n} from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n\n  const filterContacts = useSelector(selectFilteredContacts);\n  const normalized = filterContacts.toLocaleLowerCase();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalized)\n  );\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {error && (\n        <p\n          style={{\n            fontSize: 16,\n            fontWeight: 600,\n            color: 'red',\n          }}\n        >\n          Что-то пошло не так...\n        </p>\n      )}\n\n      {isLoading && !error && (\n        <p\n          style={{\n            fontSize: 16,\n            fontWeight: 600,\n            color: '#6366f1',\n            marginTop: 16,\n          }}\n        >\n          Загрузка...\n        </p>\n      )}\n\n      {contacts.length > 0 && (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            return (\n              <ContactListItem key={id}>\n                <span>{name} :</span>\n                <span>{number} </span>\n                <ContactListButton\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(id))}\n                >\n                  Delete\n                </ContactListButton>\n              </ContactListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import { Section } from 'components/Section/Section';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactsList/ContactsList';\n\nexport default function Contact() {\n  return (\n    <>\n      <ContactForm />\n\n      <Section>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["SectionContainer","styled","SectionTitle","Section","title","children","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filters","filter","ContactFormList","ContactFormLable","ContactFormInput","ContactFormButton","ContactForm","dispatch","useDispatch","useState","contactName","setContactName","contactNumber","setContactNumber","useSelector","handleAddContact","name","number","addContact","resetForm","autoComplete","onSubmit","e","preventDefault","find","toLowerCase","alert","htmlFor","type","value","id","pattern","required","onChange","target","FilterFormLable","FilterFormInput","Filter","filteredContacts","currentTarget","List","ContactListItem","ContactListButton","ContactList","useEffect","fetchContacts","console","log","normalized","toLocaleLowerCase","contact","includes","style","fontSize","fontWeight","color","marginTop","length","map","onClick","deleteContact","Contact"],"sourceRoot":""}